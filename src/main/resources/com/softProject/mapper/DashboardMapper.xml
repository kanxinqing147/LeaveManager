<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.softProject.mapper.DashboardMapper">
    <resultMap id="StudentResultMapper" type="Student">
        <result property="userId" column="student_id"/>
        <result property="studentName" column="student_name"/>
        <result property="gender" column="gender"/>
        <result property="procession" column="procession"/>
        <result property="grade" column="grade"/>
        <result property="counsellor" column="counsellor"/>
        <result property="password" column="password"/>
    </resultMap>

    <resultMap id="TeacherResultMapper" type="Teacher">
        <result property="userId" column="teacher_id"/>
        <result property="teacherName" column="teacher_name"/>
        <result property="gender" column="gender"/>
        <result property="password" column="password"/>
    </resultMap>

    <resultMap id="NotifyResultMap" type="Notify">
        <result property="notifyId" column="notify_id"/>
        <result property="applicantId" column="applicant_id"/>
        <result property="handlerId" column="handler_id"/>
        <result property="createTime" column="create_time"/>
        <result property="modifyTime" column="modify_time"/>
        <result property="actionDesc" column="action_desc"/>
    </resultMap>

    <resultMap id="NotifyViewResultMap" type="NotifyView">
        <result property="notifyId" column="notify_id"/>
        <result property="studentName" column="student_name"/>
        <result property="teacherName" column="teacher_name"/>
        <result property="createTime" column="create_time"/>
        <result property="modifyTime" column="modify_time"/>
        <result property="actionDesc" column="action_desc"/>
    </resultMap>

    <resultMap id="AbsenceResultMap" type="Absence">
        <result property="absenceId" column="absence_id"/>
        <result property="studentId" column="s_id"/>
        <result property="studentName" column="student_name"/>
        <result property="startTime" column="start_time"/>
        <result property="endTime" column="end_time"/>
        <result property="approve" column="approve"/>
        <result property="reason" column="reason"/>
    </resultMap>

    <insert id="insertAbsence">
        insert into
            absence(s_id, start_time, end_time, reason)
        values(
            #{absence.studentId},
            #{absence.startTime},
            #{absence.endTime},
            #{absence.reason}
        );
    </insert>
    <update id="updateAbsence">
        UPDATE
            absence
        SET
            <if test="absence.startTime != null">
                start_time = #{absence.startTime},
            </if>
            <if test="absence.approve != null">
                approve = #{absence.approve},
            </if>
            <if test="absence.reason != null and absence.reason != ''">
                reason = #{absence.reason},
            </if>
            end_time = #{absence.endTime}

        WHERE
            absence_id = #{absence.absenceId}
        ;
    </update>

    <update id="updateStudent">
        UPDATE
            student
        SET
            student_name = #{student.studentName},
            password = #{student.password},
            gender = #{student.gender},
            procession = #{student.procession},
            grade = #{student.grade}
        WHERE
            student_id = #{student.userId}
        ;
    </update>

    <update id="updateTeacher">
        UPDATE
            teacher
        SET
            teacher_name = #{teacher.teacherName},
            password = #{teacher.password},
            gender = #{teacher.gender}
        WHERE
            teacher_id = #{teacher.userId}
        ;
    </update>

    <delete id="deleteByAbsenceIds">
        DELETE FROM
            absence
        WHERE
            absence_id
        IN
        <foreach collection="ids" item="absenceId" open="(" separator="," close=")">
            #{absenceId}
        </foreach>
    </delete>

    <select id="selectInNotifyByConditions" resultMap="NotifyResultMap">
        SELECT
            *
        FROM
            notify
        <where>
            <if test="notify.notifyID != null and notify.notifyID != ''">
                AND notify_id like #{notify.notifyID}
            </if>
            <if test="notify.applicantId != null and notify.applicantId != ''">
                AND applicant_id like #{notify.notifyID}
            </if>
            <if test="notify.handlerId != null and notify.handlerId != ''">
                AND handler_id like #{notify.handlerId}
            </if>
            <if test="notify.createTime != null and notify.createTime != ''">
                AND create_time like #{notify.createTime}
            </if>
            <if test="notify.modifyTime != null and notify.modifyTime != ''">
                AND modify_time like #{notify.modifyTime}
            </if>
            <if test="notify.actionDesc != null and notify.actionDesc != ''">
                AND actionDesc like #{notify.actionDesc}
            </if>
        </where>
        ORDER BY
            DATE(modify_time) DESC
        LIMIT
            #{begin},
            #{size}
    </select>

    <select id="selectInNotifyViewByConditions" resultMap="NotifyViewResultMap">
        SELECT
            *
        FROM
            notify_view
        <where>
            <if test="notifyView.notifyID != null and notifyView.notifyID != ''">
                AND notify_id like #{notifyView.notifyID}
            </if>
            <if test="notifyView.studentName != null and notifyView.studentName != ''">
                AND student_name like #{notifyView.studentName}
            </if>
            <if test="notifyView.teacherName != null and notifyView.teacherName != ''">
                AND teacher_name like #{notifyView.teacherName}
            </if>
            <if test="notifyView.createTime != null and notifyView.createTime != ''">
                AND create_time like #{notifyView.createTime}
            </if>
            <if test="notifyView.modifyTime != null and notifyView.modifyTime != ''">
                AND modify_time like #{notifyView.modifyTime}
            </if>
            <if test="notifyView.actionDesc != null and notifyView.actionDesc != ''">
                AND actionDesc like #{notifyView.actionDesc}
            </if>
        </where>
        ORDER BY
            DATE(modify_time) DESC
        LIMIT
            #{begin},
            #{size}
    </select>

    <select id="selectInNotifyCount" resultType="int">
        SELECT
            count(*)
        FROM
            notify
        <where>
            <if test="notify.notifyID != null and notify.notifyID != ''">
                AND notify_id like #{notify.notifyID}
            </if>
            <if test="notify.applicantId != null and notify.applicantId != ''">
                AND applicant_id like #{notify.notifyID}
            </if>
            <if test="notify.handlerId != null and notify.handlerId != ''">
                AND handler_id like #{notify.handlerId}
            </if>
            <if test="notify.createTime != null and notify.createTime != ''">
                AND create_time like #{notify.createTime}
            </if>
            <if test="notify.modifyTime != null and notify.modifyTime != ''">
                AND modify_time like #{notify.modifyTime}
            </if>
            <if test="notify.actionDesc != null and notify.actionDesc != ''">
                AND actionDesc like #{notify.actionDesc}
            </if>
        </where>
    </select>

    <select id="selectByStudentId" resultMap="StudentResultMapper">
        SELECT
            *
        FROM
            student
        WHERE
            student_id = #{studentId}
        ;
    </select>
    <select id="selectByTeacherId" resultMap="TeacherResultMapper">
        SELECT
            *
        FROM
            teacher
        WHERE
            teacher_id = #{teacherId}
        ;
    </select>
    <select id="selectInNotifyViewCount" resultType="int">
        SELECT
            count(*)
        FROM
            notify_view
        <where>
            <if test="notifyView.notifyID != null and notifyView.notifyID != ''">
                AND notify_id like #{notifyView.notifyID}
            </if>
            <if test="notifyView.studentName != null and notifyView.studentName != ''">
                AND student_name like #{notifyView.studentName}
            </if>
            <if test="notifyView.teacherName != null and notifyView.teacherName != ''">
                AND teacher_name like #{notifyView.teacherName}
            </if>
            <if test="notifyView.createTime != null and notifyView.createTime != ''">
                AND create_time like #{notifyView.createTime}
            </if>
            <if test="notifyView.modifyTime != null and notifyView.modifyTime != ''">
                AND modify_time like #{notifyView.modifyTime}
            </if>
            <if test="notifyView.actionDesc != null and notifyView.actionDesc != ''">
                AND actionDesc like #{notifyView.actionDesc}
            </if>
        </where>
    </select>
    <select id="selectInAbsenceByConditions" resultMap="AbsenceResultMap">
        SELECT
            absence.absence_id,
            absence.s_id,
            student.student_name,
            absence.start_time,
            absence.end_time,
            absence.approve,
            absence.reason
        FROM
            absence,
            student
        <where>
            absence.s_id = student.student_id
            <if test="absence.studentName != null and absence.studentName != ''">
                AND student.student_name like #{absence.studentName}
            </if>
            <if test="absence.approve != null">
                AND absence.approve = #{absence.approve}
            </if>
            <if test="absence.reason != null and absence.reason != ''">
                AND absence.reason like #{absence.reason}
            </if>
        </where>
        LIMIT
        #{begin},
        #{size}
    </select>
    <select id="selectInAbsenceByCount" resultType="int">
        SELECT
            count(*)
        FROM
            absence,
            student
        <where>
            absence.s_id = student.student_id
            <if test="absence.studentName != null and absence.studentName != ''">
                AND student.student_name like #{absence.studentName}
            </if>
            <if test="absence.approve != null">
                AND absence.approve = #{absence.approve}
            </if>
            <if test="absence.reason != null and absence.reason != ''">
                AND absence.reason like #{absence.reason}
            </if>
        </where>
    </select>
</mapper>